factorToIndicators(df = sub.0, f = "x11")
debugSource('D:/Projects/Beeline/functions.R')
factorToIndicators(df = sub.0, f = "x11")
debugSource('D:/Projects/Beeline/functions.R')
factorToIndicators(df = sub.0, f = "x11")
View(sub.6)
factorToIndicators(df = sub.0, f = "x5")
l[1]
l[0]
l[5]
debugSource('D:/Projects/Beeline/functions.R')
factorToIndicators(df = sub.0, f = "x5")
ddd<-factorToIndicators(df = sub.0, f = "x5")
source('D:/Projects/Beeline/functions.R')
ddd<-factorToIndicators(df = sub.0, f = "x5")
source('D:/Projects/Beeline/functions.R')
ddd<-factorToIndicators(df = sub.0, f = "x5")
debugSource('D:/Projects/Beeline/functions.R')
ddd<-factorToIndicators(df = sub.0, f = "x5")
source('D:/Projects/Beeline/functions.R')
ddd<-factorToIndicators(df = sub.0, f = "x5")
debugSource('D:/Projects/Beeline/functions.R')
ddd<-factorToIndicators(df = sub.0, f = "x5")
source('D:/Projects/Beeline/functions.R')
source('D:/Projects/Beeline/functions.R')
ss<-model.matrix(~x5,sub.0)
View(ss)
summary(sub.0$x5)
summary(sub.1$x5)
summary(sub.2$x5)
ss<-model.matrix(~x10,sub.0)
View(ss)
summary(sub.2$x10)
summary(sub.0$x10)
barplotall("x10")
summarycol("x10")
ss<-model.matrix(~x5,sub.0)
View(ss)
summarycol("x5")
source('D:/Projects/Beeline/functions.R')
barplotall("X5")
barplotall("x5")
dim(sub.3)
dim(sub.3)[1,]
dim(sub.3)[1]
?print
source('D:/Projects/Beeline/functions.R')
summarycol("x5")
dim(dt)[1,]
dim(dt)
dim(sub.3)[1,]
dim(sub.3)
dim(sub.3)[1]
source('D:/Projects/Beeline/functions.R')
summarycol("x5")
source('D:/Projects/Beeline/functions.R')
summarycol("x5")
summary(sub.6["x5"])
s<-summary(sub.6["x5"])
class(s)
s
s[1,2]
s[1,]
s[3,]
dim(s)
s[3,1]
source('D:/Projects/Beeline/functions.R')
summarycol("x5")
ss1<-ss[-"1746600cb0"]
ss["1746600cb0"]<-NULL
ss["1746600cb0"]<-NULL
View(ss)
clss
class(ss)
ss<-data.frame(ss)
class(ss)
View(ss)
ss["1746600cb0"]<-NULL
View(ss)
ss$X.Intercept<-NULL
View(ss)
ss<-model.matrix(~x5,sub.0)
ss<-model.matrix(~x5,dt)
View(ss)
ss<-data.frame(ss)
drops <- c("1746600cb0")
ss<-ss[,!(names(ss) %in% drops)]
View(ss)
drops <- c("1746600cb0","X.Intercept.")
ss<-ss[,!(names(ss) %in% drops)]
View(ss)
summary(ss)
barplot(ss)
barplot(ss$x51746600cb0)
barplot(ss$x54f10e28b30)
barplotall(dt$x5)
barplotall("x5")
dtx5<-subset(dt, dt$x5 != "1746600cb0")
summary(dtx5$x5)
barplot(dtx5$x5)
barplot(table(dtx5$x5)
)
dtx5<-subset(sub.4, sub.4$x5 != "1746600cb0")
barplot(table(dtx5$x5))
ss<-model.matrix(~x10,sub.0)
ss<-data.frame(ss)
ss<-model.matrix(~x15,sub.0)
ss<-data.frame(ss)
sub.0<-cbind(sub.0,ss)
View(sub.0)
summarycol("x15")
barplotall("x15")
dtx5<-subset(dt, dt$x15 != "617a4ad3f9")
barplot(table(dtx5$y))
barplot(table(dt5$y))
barplot(table(dt$y))
barplot(table(dtx5$x15))
ss<-model.matrix(~x15,sub.0)
ss<-data.frame(ss)
ss<-model.matrix("~x5"x15,dt)
ss<-model.matrix("x15",dt)
source('D:/Projects/Beeline/functions.R')
ss<-model.matrix(~x5,dt)
idt<-dropBind(dt,model.matrix(~x5,dt))
idt<-dropBind(dt,model.matrix(~x9,dt))
View(idt)
idt<-dropBind(dt,model.matrix(~x5,dt))
idt<-dropBind(idt,model.matrix(~x9,dt))
idt<-dropBind(dt,model.matrix(~x5,dt))
idt<-dropBind(idt,model.matrix(~x9,dt))
idt<-dropBind(idt,model.matrix(~x0,dt))
idt<-dropBind(idt,model.matrix(~x11,dt))
idt<-dropBind(idt,model.matrix(~x12,dt))
idt<-dropBind(idt,model.matrix(~x14,dt))
idt<-dropBind(idt,model.matrix(~x15,dt))
idt<-dropBind(idt,model.matrix(~x10,dt))
idt<-dropBind(idt,model.matrix(~x16,dt))
idt<-dropBind(idt,model.matrix(~x17,dt))
idt<-dropBind(idt,model.matrix(~x18,dt))
idt<-dropBind(idt,model.matrix(~x19,dt))
idt<-dropBind(idt,model.matrix(~x20,dt))
idt<-dropBind(idt,model.matrix(~x21,dt))
idt<-dropBind(idt,model.matrix(~x22,dt))
drops <- c("x5","x0","x9","x10","x11","x12","x14","x15","x16","x17","x18","x19","x20","x21","x22")
idt<-idt[,!(names(idt) %in% drops)]
data<-read.csv(file = 'data/train.csv', header = TRUE, sep = ',')
dt<-data[complete.cases(data),]
res<-AnomalyDetectionVec(dt$x24, max_anoms=0.02, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE)
library(AnomalyDetection)
res<-AnomalyDetectionVec(dt$x24, max_anoms=0.02, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE)
res$plot
summary(dt$x24)
res<-AnomalyDetectionVec(dt$x56, max_anoms=0.02, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE)
res$plot
res<-AnomalyDetectionVec(dt$x25, max_anoms=0.02, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE)
res$plot
source('D:/Projects/Beeline/functions.R')
summarycol("x26")
res<-AnomalyDetectionVec(dt$x26, max_anoms=0.02, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE)
res$plot
summarycol("x27")
res<-AnomalyDetectionVec(dt$x27, max_anoms=0.02, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE)
res$plot
res<-AnomalyDetectionVec(dt$x27, max_anoms=0.002, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE)
res$plot
summarycol("x28")
res<-AnomalyDetectionVec(dt$x28, max_anoms=0.002, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE)
dt$y <- as.factor(dt$y)
drops <- c("x6","x26a","x29a", "x1","x2","x3", "x4","x7")
dt<-dt[,!(names(dt) %in% drops)]
sub.0<-subset(dt,y=="0")
sub.1<-subset(dt,y=="1")
sub.2<-subset(dt,y=="2")
sub.3<-subset(dt,y=="3")
sub.4<-subset(dt,y=="4")
sub.5<-subset(dt,y=="5")
sub.6<-subset(dt,y=="6")
summarycol("x29")
res<-AnomalyDetectionVec(dt$x29, max_anoms=0.002, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE)
res$plot
dim(subset(dt, dt$x29 > 6000))
ss<-subset(dt, dt$x29 > 6000)
View(ss)
View(ss)
ss<-subset(dt, dt$x29 > 4000)
View(ss)
ss<-subset(dt, dt$x29 > 2000)
View(ss)
ss<-subset(dt, dt$x29 < 4000)
summary(ss)
summary(ss$x29)
?sapply
dt$x29<-if(dt$x29>4000){44.65}
dt$x29<-if(dt$x29>4000){44.65}else {dt$x29}
View(dt)
data<-read.csv(file = 'data/train.csv', header = TRUE, sep = ',')
dt<-data[complete.cases(data),]
dt$y <- as.factor(dt$y)
dt$x29<-if(dt$x29>4000){44.65}else {dt$x29}
res<-AnomalyDetectionVec(dt$x29, max_anoms=0.002, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE)
res$plot
dt$x29[dt$x29 > 4000]<-44.65
res<-AnomalyDetectionVec(dt$x29, max_anoms=0.002, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE)
res$plot
summarycol("x30")
res<-AnomalyDetectionVec(dt$x30, max_anoms=0.002, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE)
res$plot
barplotall("x30")
barplotall("x29")
barplotall("x31")
summarycol("x31")
source('D:/Projects/Beeline/functions.R')
res<-AnomalyDetectionVec(dt$x30, max_anoms=0.002, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE)
res$plot
res<-AnomalyDetectionVec(dt$x31, max_anoms=0.002, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE)
res$plot
res<-AnomalyDetectionVec(dt$x32, max_anoms=0.002, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE)
res$plot
res<-AnomalyDetectionVec(dt$x33, max_anoms=0.002, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE)
res$plot
res<-AnomalyDetectionVec(dt$x34, max_anoms=0.002, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE)
res$plot
View(sub.5)
View(dt)
barplotall("x34")
barplotall("x35")
res<-AnomalyDetectionVec(dt$x35, max_anoms=0.0002, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE)
res$plot
res<-AnomalyDetectionVec(dt$x35, max_anoms=0.002, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE)
res$plot
barplotall("x35")
barplotall("x36")
res<-AnomalyDetectionVec(dt$x36, max_anoms=0.002, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE)
res$plot
res<-AnomalyDetectionVec(dt$x37, max_anoms=0.002, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE) res$plot
res<-AnomalyDetectionVec(dt$x37, max_anoms=0.002, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE); res$plot
barplotall("x37")
barplotall("x38")
res<-AnomalyDetectionVec(dt$x38, max_anoms=0.002, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE); res$plot
ss<-subset(dt, dt$x38 < 43)
barplotall("x38")
barplot(table(ss))
barplot(table(ss$x38))
summary(ss$x38)
res<-AnomalyDetectionVec(ss$x38, max_anoms=0.002, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE); res$plot
res<-AnomalyDetectionVec(dt$x39, max_anoms=0.002, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE); res$plot
barplotall("x39")
barplotall("x40")
res<-AnomalyDetectionVec(dt$x40, max_anoms=0.002, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE); res$plot
ss<-subset(dt, dt$x40 < 439)
summary(dt$x40)
summary(ss$x40)
ss<-subset(dt, dt$x40 < 500)
summary(ss$x40)
res<-AnomalyDetectionVec(dt$x41, max_anoms=0.002, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE); res$plot
View(sub.1)
barplotall("x41")
res<-AnomalyDetectionVec(dt$x41, max_anoms=0.02, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE); res$plot
res<-AnomalyDetectionVec(dt$x42, max_anoms=0.02, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE); res$plot
res<-AnomalyDetectionVec(dt$x43, max_anoms=0.02, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE); res$plot
barplotall("x43")
ss<-subset(dt, dt$x43> 12)
View(ss)
res<-AnomalyDetectionVec(dt$x20, max_anoms=0.02, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE); res$plot
res<-AnomalyDetectionVec(dt$x44, max_anoms=0.02, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE); res$plot
barplotall("x44")
ss<-subset(dt, dt$x44> 17)
View(ss)
res<-AnomalyDetectionVec(dt$x45, max_anoms=0.02, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE); res$plot
barplotall("x45")
barplotall("x46")
barplotall("x47")
barplotall("x48")
barplotall("x49")
barplotall("x50")
barplotall("x51")
barplotall("x52")
barplotall("x53")
res<-AnomalyDetectionVec(dt$x53, max_anoms=0.02, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE); res$plot
barplotall("x54")
res<-AnomalyDetectionVec(dt$x54, max_anoms=0.002, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE); res$plot
barplotall("x55")
barplotall("x56")
barplotall("x57")
barplotall("x58")
barplotall("x59")
barplotall("x60")
barplotall("x61")
res<-AnomalyDetectionVec(dt$x61, max_anoms=0.002, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE); res$plot
ss<-subset(dt, dt$x61> 2600)
summary(dt$x61)
summary(ss$x61)
View(ss)
ss<-subset(dt, dt$x61< 2600)
summary(ss$x61)
summary(dt$x61)
ss<-subset(dt, dt$x61< 2500)
summary(ss$x61)
ss<-subset(dt, dt$x61< 2400)
summary(ss$x61)
ss<-subset(dt, dt$x61< 2000)
summary(ss$x61)
res<-AnomalyDetectionVec(dt$x8, max_anoms=0.002, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE); res$plot
summary(dt$x8)
barplotall("x8")
ss<-subset(dt, dt$x8 > 3)
View(ss)
ss<-subset(dt, dt$x8 > -3)
summary(dt$x8)
summary(ss$x8)
res<-AnomalyDetectionVec(ss$x8, max_anoms=0.002, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE); res$plot
res<-AnomalyDetectionVec(dt$x13, max_anoms=0.002, period=1440,direction='both', threshold = 'None', only_last=FALSE, plot=TRUE); res$plot
summary(dt$x13)
barplotall("x13")
data<-read.csv(file = 'data/train.csv', header = TRUE, sep = ',')
data$x29[is.na(data$x29)]<-44.65
data$x38[is.na(data$x38)]<-0.78
data$x40[is.na(data$x40)]<-35.055
data$x61[is.na(data$x61)]<-164
data$x8[is.na(data$x8)]<-0.2272
dt1<-data[complete.cases(data),]
dt<-data[complete.cases(data),]
dt$y <- as.factor(dt$y)
dt$x29[dt$x29 > 4000]<-44.65
dt$x38[dt$x38 > 32]<-0.78
dt$x40[dt$x40 > 500]<-35.055
dt$x61[dt$x61 > 2600]<-164
dt$x8[dt$x8 < -3]<-0.2272
drops <- c("x5","x0","x9","x10","x11","x12","x14","x15","x16","x17","x18","x19","x20","x21","x22")
idt<-idt[,!(names(idt) %in% drops)]
drops <- c("x6","x1","x2","x3", "x4","x7")
dt<-dt[,!(names(dt) %in% drops)]
library(randomForest)
install.packages("randomForest")
library(randomForest)
set.seed(555)
split <- runif(dim(dt)[1]) > 0.2
train <- dt[split,]
test <- dt[!split,]
model<-randomForest(y ~., train)
barplotall("x5")
sub.0<-subset(dt,y=="0")
sub.1<-subset(dt,y=="1")
sub.2<-subset(dt,y=="2")
sub.3<-subset(dt,y=="3")
sub.4<-subset(dt,y=="4")
sub.5<-subset(dt,y=="5")
sub.6<-subset(dt,y=="6")
barplotall("x5")
barplotall("x9")
barplotall("x11")
barplotall("x12")
dt.pca<-prcomp(dt)
install.packages("FactoMineR")
library(FactoMineR)
dt.mca <- MCA(dt,ncp = 52)
dt.mca <- MCA(dt,ncp = 32)
barplotall("x12")
barplotall("x13")
barplotall("x14")
ddt<-dt[1:4,]
View(ddt)
ddt<-dt[,5:57]
set.seed(555)
drops <- c("x10","x18","x17","x20", "x21")
dtrf<-dt[,!(names(dt) %in% drops)]
split <- runif(dim(dtrf)[1]) > 0.2
train <- dt[split,]
test <- dt[!split,]
model<-randomForest(y ~., train)
drops <- c("x10","x0","x18","x17","x20", "x21")
dtrf<-dt[,!(names(dt) %in% drops)]
split <- runif(dim(dtrf)[1]) > 0.2
train <- dt[split,]
test <- dt[!split,]
model<-randomForest(y ~., train)
data<-read.csv(file = 'data/train.csv', header = TRUE, sep = ',', na.strings=c("", "NA", "NULL"))
View(dt)
?read.csv
data<-read.table(file = 'data/train.csv', header = TRUE, sep = ',', na.strings=c("", "NA", "NULL"))
View(data)
data<-read.csv(file = 'data/train.csv', header = TRUE, sep = ',', na.strings=c("", "NA", "NULL"))
View(data)
data$x29[is.na(data$x29)]<-44.65
data$x38[is.na(data$x38)]<-0.78
data$x40[is.na(data$x40)]<-35.055
data$x61[is.na(data$x61)]<-164
data$x8[is.na(data$x8)]<-0.2272
dt<-data[complete.cases(data),]
dt$y <- as.factor(dt$y)
dt$x29[dt$x29 > 4000]<-44.65
dt$x38[dt$x38 > 32]<-0.78
dt$x40[dt$x40 > 500]<-35.055
dt$x61[dt$x61 > 2600]<-164
dt$x8[dt$x8 < -3]<-0.2272
drops <- c("x6","x1","x2","x3", "x4","x7")
dt<-dt[,!(names(dt) %in% drops)]
sub.0<-subset(dt,y=="0")
sub.1<-subset(dt,y=="1")
sub.2<-subset(dt,y=="2")
sub.3<-subset(dt,y=="3")
sub.4<-subset(dt,y=="4")
sub.5<-subset(dt,y=="5")
sub.6<-subset(dt,y=="6")
set.seed(555)
split <- runif(dim(dt)[1]) > 0.2
train <- dt[split,]
test <- dt[!split,]
model<-randomForest(y ~., train)
drops <- c("x10","x0","x18","x17","x20", "x21")
dtrf<-dt[,!(names(dt) %in% drops)]
split <- runif(dim(dtrf)[1]) > 0.2
train <- dtrf[split,]
test <- dtrf[!split,]
model<-randomForest(y ~., train)
model<-randomForest(y ~., train, importance = TRUE)
importance(model,type=1)
importance(model,type=2)
model$importance
class(model)
?write.csv
write.csv(model,"m.csv")
varImpPlot(model)
MDSplot(model, model$y)
model.pr<-randomForest(y ~., train, importance = TRUE, proximity=TRUE)
data$x29[is.na(data$x29) || dt$x29 > 4000]<-44.65
data<-read.csv(file = 'data/train.csv', header = TRUE, sep = ',', na.strings=c("", "NA", "NULL"))
data$x29[is.na(data$x29) || dt$x29 > 4000]<-44.65
data$x29[is.na(data$x29) | dt$x29 > 4000]<-44.65
data$x29[is.na(data$x29) or dt$x29 > 4000]<-44.65
data$x29[is.na(data$x29)]<-44.65
data$x38[is.na(data$x38)]<-0.78
data$x40[is.na(data$x40)]<-35.055
data$x61[is.na(data$x61)]<-164
data$x8[is.na(data$x8)]<-0.2272
dt<-data[complete.cases(data),]
dt$y <- as.factor(dt$y)
dt$x29[dt$x29 > 4000]<-44.65
dt$x38[dt$x38 > 32]<-0.78
dt$x40[dt$x40 > 500]<-35.055
dt$x61[dt$x61 > 2600]<-164
dt$x8[dt$x8 < -3]<-0.2272
drops <- c("x6","x1","x2","x3", "x4","x7")
dt<-dt[,!(names(dt) %in% drops)]
sub.0<-subset(dt,y=="0")
sub.1<-subset(dt,y=="1")
sub.2<-subset(dt,y=="2")
sub.3<-subset(dt,y=="3")
sub.4<-subset(dt,y=="4")
sub.5<-subset(dt,y=="5")
sub.6<-subset(dt,y=="6")
idt<-dropBind(dt,model.matrix(~x5,dt))
idt<-dropBind(idt,model.matrix(~x9,dt))
idt<-dropBind(idt,model.matrix(~x0,dt))
idt<-dropBind(idt,model.matrix(~x11,dt))
idt<-dropBind(idt,model.matrix(~x12,dt))
source('D:/Projects/Beeline/functions.R')
idt<-dropBind(dt,model.matrix(~x5,dt))
idt<-dropBind(idt,model.matrix(~x9,dt))
idt<-dropBind(idt,model.matrix(~x0,dt))
idt<-dropBind(idt,model.matrix(~x11,dt))
idt<-dropBind(idt,model.matrix(~x12,dt))
idt<-dropBind(idt,model.matrix(~x14,dt))
idt<-dropBind(idt,model.matrix(~x15,dt))
idt<-dropBind(idt,model.matrix(~x10,dt))
idt<-dropBind(idt,model.matrix(~x16,dt))
idt<-dropBind(idt,model.matrix(~x17,dt))
idt<-dropBind(idt,model.matrix(~x18,dt))
idt<-dropBind(idt,model.matrix(~x19,dt))
idt<-dropBind(idt,model.matrix(~x20,dt))
idt<-dropBind(idt,model.matrix(~x21,dt))
idt<-dropBind(idt,model.matrix(~x22,dt))
drops <- c("x5","x0","x9","x10","x11","x12","x14","x15","x16","x17","x18","x19","x20","x21","x22")
idt<-idt[,!(names(idt) %in% drops)]
class(idt)
library(randomForest)
set.seed(555)
split <- runif(dim(idt)[1]) > 0.2
train <- idt[split,]
test <- idt[!split,]
model.pr<-randomForest(y ~., train, importance = TRUE, proximity=TRUE)
barplotall("x13")
mean(idt$x13)
x13mean<-mean(idt$x13)
x13max<-max(idt$x13)
abs(-3)
x13max<-abs(max(idt$x13))
idt$x13<-(idt$x13-x13mean)/x13max
barplotall("x13")
summary(idt$x13)
summary(idt$x14)
summary(idt$x8)
??normalize
source('D:/Projects/Beeline/functions.R')
source('D:/Projects/Beeline/functions.R')
normalize(sub.0, "x13")
mean(sub.0["x13"])
summary(sub.0["x13"])
mean(sub.0$x13)
summary(sub.0["x13"])
summary(sub.0["x13"])
mean(sub.0["x13"])
mean(sub.0["x13",])
mean(sub.0[,"x13"])
source('D:/Projects/Beeline/functions.R')
normalize(sub.0, "x13")
sub.0<-normalize(sub.0, "x13")
source('D:/Projects/Beeline/functions.R')
subnorm<-normalize(sub.1, "x13")
summary(sub.0)
barplot(table(sub.1$x13))
barplot(table(subnorm$x13))
