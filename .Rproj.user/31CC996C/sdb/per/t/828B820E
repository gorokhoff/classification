{
    "contents" : "#install.packages(\"devtools\")\n#devtools::install_github(\"twitter/AnomalyDetection\")\n#if(!exists(\"data\")){\n  data<-read.csv(file = 'data/train.csv', header = TRUE, sep = ',', na.strings=c(\"\", \"NA\", \"NULL\"))\n#}\n\n  data$x29[is.na(data$x29)]<-44.65\n  data$x38[is.na(data$x38)]<-0.78\n  data$x40[is.na(data$x40)]<-35.055\n  data$x61[is.na(data$x61)]<-164\n  data$x8[is.na(data$x8)]<-0.2272\n  \n  dt<-data[complete.cases(data),]\n#   dt$x26a<-round(dt$x26*12)\n#   dt$x26a<-as.factor(dt$x26a)\n#   dt$x26<-dt$x26a\n  \n#   dt$x29a<-round(dt$x29*12)\n#   dt$x29a<-as.factor(dt$x29a)\n#   dt$x29<-dt$x29a\n#   \n\n  dt$y <- as.factor(dt$y)\n  #Anomaly replace\n  dt$x29[dt$x29 > 4000]<-44.65\n  dt$x38[dt$x38 > 32]<-0.78\n  dt$x40[dt$x40 > 500]<-35.055\n  dt$x61[dt$x61 > 2600]<-164\n  dt$x8[dt$x8 < -3]<-0.2272\n  #ss<-subset(dt, dt$x38 < 43)\n  \n# dt$x35a<-round(dt$x35*12)\n# dt$x35a<-as.factor(dt$x35a)\n# dt$x35<-dt$x35a\n  drops <- c(\"x6\",\"x1\",\"x2\",\"x3\", \"x4\",\"x7\")\n  dt<-dt[,!(names(dt) %in% drops)]\n  sub.0<-subset(dt,y==\"0\")\n  sub.1<-subset(dt,y==\"1\")\n  sub.2<-subset(dt,y==\"2\")\n  sub.3<-subset(dt,y==\"3\")\n  sub.4<-subset(dt,y==\"4\")\n  sub.5<-subset(dt,y==\"5\")\n  sub.6<-subset(dt,y==\"6\")\n\n  idt<-dropBind(dt,model.matrix(~x5,dt))\n  idt<-dropBind(idt,model.matrix(~x9,dt))\n  idt<-dropBind(idt,model.matrix(~x0,dt))\n  idt<-dropBind(idt,model.matrix(~x11,dt))\n  idt<-dropBind(idt,model.matrix(~x12,dt))\n  idt<-dropBind(idt,model.matrix(~x14,dt))\n  idt<-dropBind(idt,model.matrix(~x15,dt))\n  idt<-dropBind(idt,model.matrix(~x10,dt))\n  idt<-dropBind(idt,model.matrix(~x16,dt))\n  idt<-dropBind(idt,model.matrix(~x17,dt))\n  idt<-dropBind(idt,model.matrix(~x18,dt))\n  idt<-dropBind(idt,model.matrix(~x19,dt))\n  idt<-dropBind(idt,model.matrix(~x20,dt))\n  idt<-dropBind(idt,model.matrix(~x21,dt))\n  idt<-dropBind(idt,model.matrix(~x22,dt))\n  drops <- c(\"x5\",\"x0\",\"x9\",\"x10\",\"x11\",\"x12\",\"x14\",\"x15\",\"x16\",\"x17\",\"x18\",\"x19\",\"x20\",\"x21\",\"x22\")\n  idt<-idt[,!(names(idt) %in% drops)]\n  \n  #library(FactoMineR)\n  #dt.pca<-prcomp(dt)\n  #install.packages(\"randomForest\")\n  library(randomForest)\n\n\n#  numIndex<-sapply(sub.0, is.numeric)\n#  factorIndex<-sapply(sub.0, is.factor)\n\nset.seed(555)\n  #drops <- c(\"x10\",\"x0\",\"x18\",\"x17\",\"x20\", \"x21\")\n  #dtrf<-dt[,!(names(dt) %in% drops)]\nsplit <- runif(dim(idt)[1]) > 0.2\ntrain <- idt[split,]\ntest <- idt[!split,]\n\n#model_glm1 <- glm(y ~ ., data = test, family = binomial)\n#gc()\n  \n  #model.rf<-randomForest(y ~., train, importance = TRUE)\n  model.pr<-randomForest(y ~., train, importance = TRUE, proximity=TRUE)\n#predictions <- predict(model, test, type = \"response\")\n#print(sqrt(sum((as.vector(predictions - test$y))^2))/length(predictions))\n\n#summary(sub0)\n\n",
    "created" : 1443956481769.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2621645162",
    "id" : "828B820E",
    "lastKnownWriteTime" : 1445261545,
    "path" : "D:/Projects/Beeline/Load.R",
    "project_path" : "Load.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}